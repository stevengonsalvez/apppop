name: Publish Bootstrap CLI

on:
  push:
    branches:
      - main
    paths:
      - 'apppop-bootstrap/**'
      - '.github/workflows/publish-bootstrap.yml'

permissions:
  contents: write
  packages: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apppop-bootstrap

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ github.token }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: './apppop-bootstrap/package-lock.json'
          
      - name: Install dependencies
        run: |
          npm ci
          npm ls @typescript-eslint/eslint-plugin || npm install @typescript-eslint/eslint-plugin@latest --save-dev
        
      - name: Lint
        run: npm run lint
        
      - name: Build
        run: npm run build
        
      - name: Run tests
        run: npm test

      - name: Setup Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Determine Version Bump
        id: version
        run: |
          # Get commit messages since last tag
          COMMITS=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%s")
          
          # Initialize flags
          MAJOR=false
          MINOR=false
          PATCH=false
          
          # Analyze commit messages
          while IFS= read -r commit; do
            if [[ $commit == *"BREAKING CHANGE"* ]] || [[ $commit == "feat!"* ]]; then
              MAJOR=true
            elif [[ $commit == "feat"* ]]; then
              MINOR=true
            elif [[ $commit == "fix"* ]] || [[ $commit == "refactor"* ]] || [[ $commit == "test"* ]]; then
              PATCH=true
            fi
          done <<< "$COMMITS"
          
          # Determine bump type
          BUMP="patch"  # default
          if [ "$MAJOR" = true ]; then
            BUMP="major"
          elif [ "$MINOR" = true ]; then
            BUMP="minor"
          fi
          
          echo "bump=$BUMP" >> $GITHUB_OUTPUT
        
      - name: Version and Publish
        run: |
          npm version ${{ steps.version.outputs.bump }} -m "chore(bootstrap): bump version to %s [skip ci]"
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ github.token }}

      - name: Push Changes
        run: |
          git push origin HEAD:main --follow-tags
        env:
          GITHUB_TOKEN: ${{ github.token }} 